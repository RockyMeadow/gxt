#!/bin/bash
# TxGVNN <txgvnn@gmail.com>
REPO=~/.notes
DIR_WORK=$(pwd -P)

_version(){
	echo 'gxt "Xnote Git" version 1.0'
}

_help(){
	echo -e 'What is this? \tgxt "Xnote GiT"'
	echo ""
	echo "commands are:"
	echo -e "\tnew \tNew or update note |edit|vi|update|"
	echo -e "\tadd \tAdd file to note"
	echo -e "\tsearch \tsearch name note or content contain pattern |find|"
	echo -e "\tview \tview note contain pattern |show|cat|less|more|"
	echo -e "\trm \tremove note |rm|delete|"
	echo -e "\tshare \tshare note vi termbin.com"
	echo -e "\tlist \tList all notes |ls|"
	echo -e "\tlog \tlog all or one note"
	echo ""
	exit
}

_init(){
	if [ ! -d "$REPO/.git" ]; then
		git init "$REPO" > /dev/null
	fi
}

_new(){
	if [ "$#" -eq 2 ];then
		msg="Add $2"
		if [ -f "$REPO/$1" ]; then
			printf 'Note "%s" has exist. Update (y/n)? ' "$2"
			read -r agree
			if [ "$agree" = 'y' ]; then
				editor "$REPO/$1"
				msg="Update $2"
			else
				exit
			fi
		else
			editor "$REPO/$2"
		fi

		if [ -n "$(git status -s | awk '/??/ || /M/')" ]; then
			git add "$2"
			git commit -m "$msg" | head -n1
		fi
	else
		echo "gxt new <note-name>"
		echo "gxt vi <note-name>"
		echo "gxt edit <note-name>"
		echo "gxt update <note-name>"
	fi
}

_add(){
	if [ "$#" -ne 2 ];then
		echo "gxt add <file>"
	else
		notes=${2##*/}
		if [[ "$2" == /* ]]; then
			cp "$2" "$REPO"
		else
			cp "$DIR_WORK/$2" "$REPO"
		fi
		if [ -n "$(git status -s | awk '/^\?\?/ || /^ M/')" ]; then
			git add "$notes"
			git commit -m "Add file $notes" | head -n1
		else
			printf 'File "%s" already exists. No changed' "$notes"
		fi

	fi

}

_view(){
	if [ "$#" -ne 2 ];then
		echo "gxt cat <note-name>"
		echo "gxt view <note-name>"
		echo "gxt less <note-name>"
		echo "gxt more <note-name>"
	else
		case $1 in
			less)
				if [ "$#" -eq 2 ];then
					less "$2"
				fi;;
			more)
				if [ "$#" -eq 2 ];then
					more "$2"
				fi;;
			*)
				if [ "$#" -eq 2 ];then
					cat "$2"
				fi;;

		esac
	fi
}

_list(){
	ls
}

_search(){

	if [ "$#" -eq 2 ] && [ "$2" != '--' ]; then
		find . -path ./.git -prune -o -type f -printf '%f\0' | grep -z --color=always "$2" | tr \\0 \\n
	else
		if [ "$#" -eq 3 ] && [ "$2" == '--' ]; then
			find .  -path ./.git -prune -o -type f -exec grep -n --color=always "$3" /dev/null {} + | sed -e 's,\./,,'
		else
			echo "gxt find [<note-name>] [ -- <pattern>]"
		fi
	fi
}

_log(){
	if [ "$#" -eq 1 ]; then
		git log --graph --decorate --pretty=oneline --abbrev-commit
	else
		if [ "$#" -eq 2 ]; then
			git  log --graph --decorate --pretty=oneline --abbrev-commit -- "$2"
		else
			echo "gxt log [note-name]"
		fi
	fi
}

_share(){
	if [ "$#" -ne 2 ];then
		echo "gxt share <note-name>"
	else
		# can use pastebinit
		<"$2" nc termbin.com 9999
	fi
}

_remove(){
	if [ "$#" -eq 1 ];then
		echo "gxt rm <name-notes> ..."
	else
		item=""
		shift
		for note in "$@"
		do
			if [ -f "$note" ]; then
				rm -vrf "$note"
				item+="$note "
			else
				printf 'not found %s\n' "$note"
			fi
		done

		if [ -n "$(git status -s | awk '/^ D/')" ]; then
			git add -u
			git commit -m "Delete $item" | head -n1
		fi

	fi

}
## __run__ ##
_init

cd "$REPO" || exit 1

case $1 in
	new|edit|update|vi)	_new    "$@" ;;

	               add)	_add    "$@" ;;

	view|cat|less|more)	_view   "$@" ;;

	           list|ls)	_list   "$@" ;;

	       find|search)	_search "$@" ;;

	             share)	_share  "$@" ;;

	  rm|remove|delete)	_remove  "$@" ;;

	               log)	_log    "$@" ;;

	         --version)	_version     ;;

	                 *)	_help        ;;
esac
