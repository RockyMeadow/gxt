#!/bin/bash
# Giap Tran <txgvnn@gmail.com>
# github.com/TxGVNN/gxt

REPO=~/.gxt
DIR_WORK=$(pwd -P)

_version(){
	echo 'gxt "Xnote Git" version 1.0'
}

_help(){
	echo -e 'What is this? \tgxt "Xnote GiT"'
	echo ""
	echo "commands are:"
	echo -e "\tnew \tNew or update note |edit|vi|update|"
	echo -e "\tadd \tAdd file to note"
	echo -e "\tsearch \tsearch note with name or content contain pattern |find|"
	echo -e "\tcat \tview note |cat|less|more|"
	echo -e "\tstat \tdisplay note status"
	echo -e "\tmv \trename note |rename|"
	echo -e "\trm \tremove notes |rm|delete|"
	echo -e "\texport \texport note to file"
	echo -e "\tshare \tshare note vi termbin.com"
	echo -e "\tlist \tList all notes |ls|"
	echo -e "\tlog \tlog all or only note"
	echo ""
	exit
}

_init(){
	if [ ! -d "$REPO/.git" ]; then
		git init "$REPO" > /dev/null
	fi
}

_new(){
	if [ "$#" -eq 2 ];then
		if [ -f "$REPO/$2" ]; then
			_edit "$@"
			exit
		else
			if [[ "$2" == *[/]* ]]; then
				dir=${2%/*}
				mkdir -p "$REPO/$dir"
			fi
			editor "$REPO/$2"
		fi


		if [ -n "$(git status -s | awk '/??/ || /M/')" ]; then
			git add "$2"
			git commit -m "Add $2" | head -n1
		fi
	else
		echo "gxt new <note-name>"
		echo "gxt vi <note-name>"
	fi
}

_edit(){
	if [ "$#" -eq 2 ];then
		if [ -f "$REPO/$2" ]; then
			editor "$REPO/$2"
			if [ -n "$(git status -s | awk '/??/ || /M/')" ]; then
				git add "$2"
				git commit -m "Update $2" | head -n1
			fi
		else
			printf 'Note "%s" not found' "$2"
		fi

	else
		echo "gxt vi <note-name>"
		echo "gxt edit <note-name>"
		echo "gxt update <note-name>"
	fi
}

_add(){
	if [[ "$#" -lt 2 || "$#" -gt 3 ]]; then
		echo "gxt add <file> [<new-note-name]"
	else
		if [ -f "$3" ]; then
			echo "Note has exist. Do you want override that (y/N)?"
			read -r override
			if [[ "$override" != "y" && "$override" != "Y" ]]; then
				exit 1
			fi
		fi

		notes=$3
		if [ -z "$3" ]; then
			notes=${2##*/}
		fi
		#if need to create new directory
		if [[ "$3" == *[/]* ]]; then
			dir=${3%/*}
			mkdir -p "$REPO/$dir"
		fi

		if [[ "$2" == /* ]]; then
			cp "$2" "$REPO/$notes"
		else
			cp "$DIR_WORK/$2" "$REPO/$notes"
		fi

		if [ -n "$(git status -s | awk '/^\?\?/ || /^ M/')" ]; then
			git add "$notes"
			git commit -m "Add file $notes" | head -n1
		else
			printf 'Note "%s" was not changed' "$notes"
		fi

	fi
}

_view(){
	if [ "$#" -ne 2 ];then
		echo "gxt cat <note-name>"
		echo "gxt less <note-name>"
		echo "gxt more <note-name>"
	else
		case $1 in
			less)
				less "$2"
				;;
			more)
				more "$2"
				;;
			*)
				cat "$2"
				;;
		esac
	fi
}

_stat(){
	if [ "$#" -ne 2 ];then
		echo "gxt stat <note-name>"
	else
		stat "$2"
	fi
}

_list(){
	echo "# CATEGORIES"
	find "./$2" -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | sed '/\.git/d'
	echo ""
	echo "# GLOBAL"
	ls -F "./$2"
}

_search(){
	content='';
	dir='.'
	while [[ $# -gt 0 ]]
	do
		key="$1"
		case $key in
			-c|--category)
				dir="$2"
				shift # past argument
				;;
			-h|--help)
				echo "gxt find [-c category] [<like-name>] [ -- <pattern>]"
				exit
				;;
			--)
				content="0";
				;;
			*)
				value="$1"
				;;
		esac
		shift # past argument or value
	done
	[ -z "$value" ] && _search -h

	if [ -n "$content" ] ; then
		find "$dir"  -path ./.git -prune -o -type f -exec grep -n --color=always "$value" /dev/null {} + | sed -e 's,\./,,'
	else
		find "$dir" -path ./.git -prune -o -type f -printf '%P\0'  | grep -zi --color=always "$value" | tr \\0 \\n
	fi

}

_log(){
	if [ "$#" -eq 1 ]; then
		git log --graph --decorate --pretty=oneline --abbrev-commit
	else
		if [ "$#" -eq 2 ]; then
			git  log --graph --decorate --pretty=oneline --abbrev-commit -- "$2"
		else
			echo "gxt log [note-name]"
		fi
	fi
}

_share(){
	if [ "$#" -ne 2 ];then
		echo "gxt share <note-name>"
	else
		# can use pastebinit
		<"$2" nc termbin.com 9999
	fi
}

_move(){
	if [ "$#" -ne 3 ] ;then
		echo "gxt mv <old-notes> <new-notes>"
	else
		if [[ "$3" == *[/]* ]]; then
			dir=${3%/*}
			mkdir -p "$REPO/$dir"
		fi
		mv "$2" "$3"
		if [ -n "$(git status -s | awk '/^ D/')" ]; then
			git add -u
			git add "$3"
			git commit -m "Rename $2 -> $3" | head -n1
			git push origin master
		fi

	fi
}

_remove(){
	if [ "$#" -eq 1 ];then
		echo "gxt rm <name-notes> ..."
	else
		item=""
		shift
		for note in "$@"
		do
			if [ -f "$note" ]; then
				rm -vrf "$note"
				item+="$note "
			else
				printf 'not found %s\n' "$note"
			fi
		done

		if [ -n "$(git status -s | awk '/^ D/')" ]; then
			git add -u
			git commit -m "Delete $item" | head -n1
		fi

	fi
}

_export(){
	if [[ "$#" -lt 2 || "$#" -gt 3 ]]; then
		echo "gxt export <name-notes> [PATH]"
	else
		path=$3
		if [ -z "$path" ]; then
			path="$DIR_WORK"
		fi
		if [[ "$3" != /* ]]; then
			path="$DIR_WORK/$3"
		fi

		cp "$REPO/$2" "$path" -i
	fi

}

## __RUN__ ##
_init

cd "$REPO" || exit 1

case $1 in
	new|vi)
		_new "$@"
		;;

	edit|update)
		_edit "$@"
		;;

	add)
		_add "$@"
		;;

	cat|less|more)
		_view "$@"
		;;

	stat)
		_stat "$@"
		;;

	list|ls)
		_list "$@"
		;;

	find|search)
		shift
		_search "$@"
		;;

	export)
		_export "$@"
		;;

	share)
		_share "$@"
		;;

	mv|rename)
		_move "$@"
		;;

	rm|remove|delete)
		_remove "$@"
		;;

	log)
		_log "$@"
		;;

	--version)
		_version
		;;

	*)
		_help
		;;
esac
